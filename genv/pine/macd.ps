//@version=4
study(title="MACD", shorttitle="MACD")

// Getting inputs
fast_length = input(title="Fast Length", type=input.integer, defval=12)
slow_length = input(title="Slow Length", type=input.integer, defval=26)
src = input(title="Source", type=input.source, defval=close)
signal_length = input(title="Signal Smoothing", type=input.integer, minval = 1, maxval = 50, defval = 9)
sma_source = input(title="Simple MA(Oscillator)", type=input.bool, defval=false)
sma_signal = input(title="Simple MA(Signal Line)", type=input.bool, defval=false)

// Plot colors
col_grow_above = #26A69A
col_grow_below = #FFCDD2
col_fall_above = #B2DFDB
col_fall_below = #EF5350
col_macd = #0094ff
col_signal = #ff6a00
pine_ema(src, length) =>
    alpha = 2.0 / (length + 1)
    sum=0.0
    sum:= na(sum[1]) ? src : alpha * src + (1 - alpha) * nz(sum[1])

// Calculating
fast_ma =  pine_ema(close, fast_length)
slow_ma =  pine_ema(close, slow_length)
mymacd = fast_ma - slow_ma
signal = sma_signal ? sma(mymacd, signal_length) : pine_ema(mymacd, signal_length)
hist = mymacd - signal

plot(hist, title="Histogram", style=plot.style_columns, color=(hist>=0 ? (hist[1] < hist ? col_grow_above : col_fall_above) : (hist[1] < hist ? col_grow_below : col_fall_below) ), opacity=0 )
plot(mymacd, title="MACD", color=col_macd, opacity=0)
plot(signal, title="Signal", color=col_signal, opacity=0)